<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns="Definitions">
        <definition name="DiplomacyAction" table-name="DiplomacyActions" cpp="true">
                <!-- The type of diplomatic action. -->
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true"/>
                <!-- The localization friendly name of this diplomatic action. -->
                <field name="Name" type="LocalizedText" not-null="true"/>
                <!-- The localization friendly description of this diplomatic action. -->
                <field name="Description" type="LocalizedText" not-null="true"/>
                <!-- The number of tokens required to begin this action. -->
                <field name="BaseTokenCost" type="Integer" value="0" not-null="true"/>
                <!-- The amount of total progress required to complete this diplomatic action. -->
                <field name="BaseDuration" type="Integer" value="5" not-null="true"/>
                <!-- The random amount to add to the action progress when it starts to give a random duration. -->
                <field name="RandomInitialProgress" type="Integer" value="0" not-null="true"/>
                <!-- For display purposes, the progress value that "counts" as zero. -->
                <field name="RelativeZero" type="Integer" value="0" not-null="true"/>
                <!-- If true, this diplomatic action can only be initiated by a unit. -->
                <field name="MustStartFromUnit" type="Bool" value="false" not-null="true"/>
                <!-- The amount of natural progress this action accrues each turn. -->
                <field name="Momentum" type="Integer" value="0" not-null="true"/>
                <!-- If true, this action is considered shared/owned by the initial player AND the target (e.g. wars). -->
                <field name="Symmetrical" type="Bool" value="false" not-null="true"/>
                <!-- If true then both sides are helping each other.  Initially for Alliances.  Definitely not for DeclareWar -->
                <field name="IsMutualSupport" type="Bool" value="false" not-null="true"/>
                <!-- Number of turns after a player un-supports/opposes an action before they can do it again.  This does not impact doing the opposite action. -->
                <field name="UnsupportPenalty" type="Integer" value="0" not-null="true"/>
                <!-- Number of turns after a player cancels an action before they can do it again with that player. -->
                <field name="CancelPenalty" type="Integer" value="0" not-null="true"/>
                <!-- The localization friendly message that amount of support of an action has changed. -->
                <field name="ChangeSupportMsg" type="LocalizedText" not-null="false"/>
                <!-- The localization friendly description when another player supports your action. -->
                <field name="SupportDesc" type="LocalizedText" not-null="false"/>
                <!-- The localization friendly description when another player removes support from your action. -->
                <field name="SupportRemovedDesc" type="LocalizedText" not-null="false"/>
                <!-- The amount of Favors tokens given by another Player for supporting their actions.  A value of 100 converts to 0.1 Favor tokens. -->
                <field name="SupportFavors" type="Integer" value="100" not-null="true"/>
                <!-- The amount of Favors you give the Target player when you complete a cooperative project with them that you started.  A value of 1000 converts to 1 Favor tokens. -->
                <field name="TargetFavors" type="Integer" value="0" not-null="true"/>
                <!-- How often the TargetFavors are given.  Some projects were set to not time out so this allows favors to still be given.  0 or less means only at end of the project. -->
                <field name="TargetFavorsFreq" type="Integer" value="0" not-null="true"/>
                <!-- The localization friendly description when another player opposes your action. -->
                <field name="OpposeDesc" type="LocalizedText" not-null="false"/>
                <!-- The localization friendly description when another player removes opposition from your action. -->
                <field name="OpposeRemovedDesc" type="LocalizedText" not-null="false"/>
                <!-- If true (and symmetrical), opposing the target of this action is the same as supporting the initial player. -->
                <field name="Opposed" type="Bool" value="false" not-null="true"/>
                <!--  Can you oppose this action at all (might want to combine with opposed, but these currently serve slightly different purposes) -->
                <field name="Opposable" type="Bool" value="true" not-null="true"/>
                <!--  Can you support this action at all if you aren't the initial player.  I might have been able to get this to work with some existing data but felt hacky. -->
                <field name="Supportable" type="Bool" value="true" not-null="true"/>
                <!-- Can a 3rd party support/oppose this project.  For now it looks like we're switching from always true to almost always false. -->
                <field name="MaxThirdPartySupport" type="Integer" value="0" not-null="true"/>
                <!-- Whether this diplomatic action will cancel if progress goes negative. -->
                <!-- TODO: Rename to "CancelOnNegativeProgress" -->
                <field name="NegativeProgressAllowed" type="Bool" value="false" not-null="true"/>
                <!-- The number of times a player can do a project with another player.  -1 means unlimited. -->
                <field name="NumTimesPerPlayer" type="Integer" value="-1" not-null="true"/>
                <!-- If the number of envoys influences progress. -->
                <field name="EnvoysInfluenceProgress" type="Bool" value="false" not-null="true"/>
                <!-- The size of the window, in turns, that a project can be supported/opposed.  This window starts at the initial turn for the player that starts the action and the turn following, for multiplayer reasons, for everyone else. -->
                <field name="SupportWindow" type="Integer" value="-1" not-null="true"/>
                <!--  If this is true then if Player A is doing this project with Player B then Player B can't do it with Player A. -->
                <field name="BlocksTargetProject" type="Bool" value="false" not-null="true"/>
                <!--  If this is true then a player can only have one instance of this project active at one time. -->
                <field name="SingleInstanceProject" type="Bool" value="true" not-null="true"/>
                <!--  If this is true then the action will need to be unlocked via gameplay such as a modifier. -->
                <field name="RequiresUnlock" type="Bool" value="false" not-null="true"/>
                <!--  If this is true then the action is only available to be started with allies. -->
                <field name="AllyOnly" type="Bool" value="false" not-null="true"/>
                <!--  If this is true then the action is only available to be started when at war with the target. -->
                <field name="WarOnly" type="Bool" value="false" not-null="true"/>
                <!--  Holds the path to the icon that represents the Diplomatic Action. -->
                <field name="UIIconPath" type="Text" value="fs://game/dip_endeavors" not-null="true"/>
                <!-- The loc key for the message displayed when someone wants to start this project with you -->
                <field name="RequestString" type="Text" not-null="false"/>
                <!-- Percentage chance that an action will succeed.  Currently just for Espionage. -->
                <field name="SuccessChance" type="Integer" value="100" not-null="true"/>
                <!-- Percentage chance that an action will be revealed.  Currently just for Espionage. -->
                <field name="RevealChance" type="Integer" value="100" not-null="true"/>
                <!-- Penalty Relationship cost  for when action is discovered.  Currently only used for Espionage actions.  -->
                <field name="RevealPenaltyRelationshipHit" type="Integer" value="0" not-null="true"/>
                <!-- Will the target always know that the action happens, even if they don't know who did it?  Currently just for Espionage. -->
                <field name="AlwaysNotifyTarget" type="Bool" value="false" not-null="true"/>
                <!-- A generic tag that the action will know what to do with.  For now just so we know if a war is a formal war. -->
                <field name="DiplomacyActionTag" type="Text" not-null="false" hash="true"/>
                <!-- Identifies if an action should refund the Influence to start it if the action is rejects. -->
                <field name="RejectionRefundsInfluence" type="Bool" value ="false" not-null="true"/>
                <!-- TODO: Add 'Minimum Progress' field. -->
                <!-- TODO: Add 'Cost Progression Model' field. -->
                <!-- If set, defines targeting rules for initiating this diplomatic action. -->
                <property name="TargetCollection" path="TargetRef"/>
                <!-- If set, defines units that are valid recipients of this diplomatic action. -->
                <property name="UnitTagCollection" path="UnitTagRef"/>
                <!-- The types of tokens that can be used to start this diplomatic action. -->
                <property name="ValidTokenCollection" path="ValidTokenRef"/>
                <!-- Stages in this diplomatic action.  Optional.  Stages have requirements and entry modifiers. -->
                <property name="StageCollection" path="StageRef"/>
                <!-- Modifiers that require a certain number of envoys before they can be active. -->
                <property name="EnvoysInActionModifiers" path="EnvoysInActionModifiersRef"/>
                <!-- Data that the UI will need so it can display it as an available project. -->
                <property name="DiplomaticProjects_UI_Data" path="DiplomaticProjects_UI_DataRef"/>
                <!-- Data for any bonus envoys awarded to a project depending on the relationship of the initial/target players of a project. -->
                <property name="DiplomacyBonusEnvoyData" path="DiplomacyBonusEnvoyDataRef"/>
                <!-- The types of responses the Traget Player can do when Initial Player starts action. -->
                <property name="ActionResponseCollection" path="ActionResponseRef"/>
                <!-- The Modifiers that will be needed for a Diplomatic Action/Response combination. -->
                <property name="ActionResponseModifierCollection" path="ActionResponseModifierRef"/>
                <!-- Used to identify a Diplomatic Action when updating a value in an age specific xml. -->
                <reference source="DiplomacyActionType" target="Type" to="Type"/>
                <reference source="DiplomacyActionTag" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyActionGroup" table-name="DiplomacyActionGroups" cpp="true">
                <!-- The diplomatic action Group. -->
                <field name="DiplomacyActionGroupType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyActionGroupType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyActionGroupSubtype" table-name="DiplomacyActionGroupSubtypes" cpp="true">
                <!-- The diplomatic action Group Subtype. -->
                <field name="DiplomacyActionGroupSubtypeType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyActionGroupSubtypeType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomaticActionValidToken" table-name="DiplomaticActionValidTokens" cpp="true">
                <field name="TokenType" type="Text" key="true" not-null="true" hash="true"/>
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true" hash="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="ValidTokenRef" to="DiplomacyAction"/>
                <reference source="TokenType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomaticActionStage" table-name="DiplomaticActionStages" cpp="true">
                <field name="StageType" type="Text" key="true" not-null="true" hash="true"/>
                <field name="DiplomacyActionType" type="Text" not-null="true" hash="true"/>
                <field name="Name" type="LocalizedText" not-null="false"/>
                <field name="Description" type="LocalizedText" not-null="false"/>
                <field name="OwnerNotificationMessage" type="LocalizedText" not-null="false"/>
                <field name="OwnerNotificationSummary" type="LocalizedText" not-null="false"/>
                <field name="OtherPlayerNotificationMessage" type="LocalizedText" not-null="false"/>
                <field name="OtherPlayerNotificationSummary" type="LocalizedText" not-null="false"/>
                <!-- Progress that must be met in order to enter this stage.  If progress falls below this value, the stage will exit. -->
                <!-- It's possible to have multiple stages with the same progress requirement if they have other conditions to separate them. -->
                <!-- For example, with Alliances, all stages have a progress requirement of 0, but they have different conditions to mark if they are active. -->
                <!-- TODO: Add 'Cost Progression Model' field. -->
                <field name="ProgressRequirement" type="Integer" value="0" not-null="true"/>
                <field name="StageToolTip" type="LocalizedText" not-null="false"/>
                <field name="StageIconPath" type="Text" not-null="false"/>
                <!--  Currently just for Espionage.  When stage starts see if the action should be revealed to the target.  -->
                <field name="CheckForReveal" type="Bool" value="false" not-null="true"/>
                <!--  Currently just for Espionage.  -->
                <field name="CheckForFailure" type="Bool" value="false" not-null="true"/>
                <!--  Currently just for Espionage.  Check for Counter Spy being active and if so do things like slow down progress.  -->
                <field name="CheckForCounterSpy" type="Bool" value="false" not-null="true"/>
                <!--  Currently just for Espionage.  Check for turn based influnce cost.  -->
                <field name="CheckForTurnedBasedInfluenceCost" type="Bool" value="false" not-null="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="StageRef" to="DiplomacyAction"/>
                <!-- TODO: Add a table reference for requirements that must be true to enter this stage. -->
                <property name="EnterStageModifiers" path="EnterStageModifiersRef"/>
                <property name="EnvoysInStageModifiers" path="EnvoysInStageModifiersRef"/>
                <reference source="StageType" target="Type" to="Type"/>
        </definition>
        <definition name="EnterStageModifier" table-name="EnterStageModifiers" cpp="true">
                <field name="StageType" type="Text" key="true" not-null="true" hash="true"/>
                <field name="ModifierId" type="Text" key="true" not-null="true" hash="true"/>
                <!-- If true, this modifier will only be applied the first time a player enters a given stage. -->
                <field name="OneShot" type="Bool" value="false" not-null="true"/>
                <reference source="StageType" target="StageType" targetRoleName="EnterStageModifiersRef" to="DiplomaticActionStage"/>
                <reference source="ModifierId" target="ModifierId" sourceRoleName="StageModifierRef" targetRoleName="ModifierRef" to="Modifier"/>
        </definition>
        <definition name="EnvoysInStageModifier" table-name="EnvoysInStageModifiers" cpp="true">
                <field name="StageType" type="Text" key="true" not-null="true" hash="true"/>
                <field name="ModifierId" type="Text" key="true" not-null="true" hash="true"/>
                <field name="NumEnvoys" type="Integer" value="0" not-null="true"/>
                <reference source="StageType" target="StageType" targetRoleName="EnvoysInStageModifiersRef" to="DiplomaticActionStage"/>
                <reference source="ModifierId" target="ModifierId" sourceRoleName="EnvoyStageModifierRef" targetRoleName="ModifierRef" to="Modifier"/>
        </definition>
        <definition name="EnvoysInActionModifier" table-name="EnvoysInActionModifiers" cpp="true">
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true" hash="true"/>
                <field name="ModifierId" type="Text" key="true" not-null="true" hash="true"/>
                <field name="NumEnvoys" type="Integer" value="0" not-null="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="EnvoysInActionModifiersRef" to="DiplomacyAction"/>
                <reference source="ModifierId" target="ModifierId" sourceRoleName="EnvoyActionModifierRef" targetRoleName="ModifierRef" to="Modifier"/>
        </definition>
        <definition name="TypeToDiplomacyStatement" table-name="TypeToDiplomacyStatements" cpp="true">
                <field name="Type" type="Text" key="true" not-null="true" hash="true"/>
                <field name="DiplomacyStatementType" type="Text" not-null="true" hash="true"/>
        </definition>
        <definition name="DiplomacyStatement" table-name="DiplomacyStatements" cpp="true">
                <field name="DiplomacyStatementType" type="Text" key="true" not-null="true"/>
                <field name="GroupType" type="Text" not-null="true" hash="true"/>
                <field name="AutoActivate" type="Text" not-null="false" hash="true"/>
        </definition>
        <definition name="DiplomacyStatementFrame" table-name="DiplomacyStatementFrames" cpp="true">
                <field name="Type" type="Text" key="true" not-null="true" hash="true"/>
                <field name="Frame" type="Text" key="true" not-null="true" hash="true"/>
                <field name="Initiator" type="Text" key="true" not-null="true" hash="true"/>
                <field name="Text" type="Text" not-null="false"/>
                <field name="Selections" type="Text" not-null="false"/>
        </definition>
        <definition name="DiplomacyStatementSelection" table-name="DiplomacyStatementSelections" cpp="true">
                <field name="Type" type="Text" key="true" not-null="true" hash="true"/>
                <field name="Sort" type="Real" key="true" not-null="true"/>
                <field name="Key" type="Text" not-null="true"/>
                <field name="Text" type="Text" not-null="true"/>
        </definition>
        <definition name="UnitDiplomacyAction_ValidUnit" table-name="UnitDiplomacyAction_ValidUnits" cpp="true">
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true"/>
                <field name="UnitTag" type="Text" key="true" not-null="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="UnitTagRef" to="DiplomacyAction"/>
                <reference source="UnitTag" target="Tag" to="Tag" sourceRoleName="UnitTagRef"/>
                <property name="UnitTagReference" path="UnitTagRef"/>
        </definition>
        <definition name="UnitDiplomacyAction_Target" table-name="UnitDiplomacyAction_Targets" cpp="true">
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true"/>
                <field name="UnitTag" type="Text" key="true" not-null="true"/>
                <field name="TargetSpace" type="Text" key="true" not-null="true" hash="true"/>
                <field name="CivilizationLevelType" type="Text" not-null="true" hash="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="TargetRef" to="DiplomacyAction"/>
                <reference source="CivilizationLevelType" target="CivilizationLevelType" sourceRoleName="DiplomacyActionTargetRef" on-delete="SetDefault" to="CivilizationLevel"/>
                <reference source="UnitTag" target="Tag" to="Tag" sourceRoleName="UnitTagRef"/>
                <property name="UnitTagReference" path="UnitTagRef"/>
        </definition>
        <definition name="DealItem" table-name="DealItems" cpp="true">
                <field name="Type" type="Text" key="true" not-null="true"/>
                <field name="Name" type="LocalizedText" not-null="true"/>
                <field name="Description" type="LocalizedText" not-null="true"/>
        </definition>
        <definition name="DealItemAgreement" table-name="DealItemAgreements" cpp="true">
                <field name="Type" type="Text" key="true" not-null="true"/>
                <field name="Name" type="LocalizedText" not-null="true"/>
                <field name="Description" type="LocalizedText" not-null="true"/>
        </definition>
        <definition name="ModifierTokens" table-name="ModifierTokens" cpp="true">
                <!-- What has been done to give tokens. -->
                <field name="RelationshipModifier" type="Text" key="true" not-null="true"/>
                <!-- Amount of Favors given. -->
                <field name="FavorsGiven" type="Integer" value="0" not-null="true"/>
                <!-- Amount of Grievances given. -->
                <field name="GrievancesGiven" type="Integer" value="0" not-null="true"/>
                <!-- Identifies that we should get the token amount from the Diplomatic Action Event we're supporting instead. -->
                <field name="UseSupportEvent" type="Bool" value="false" not-null="true"/>
        </definition>
        <definition name="DiplomaticProject_UI_Data" table-name="DiplomaticProjects_UI_Data" cpp="true">
                <!-- The Diplomatic Action/Project this is related to. -->
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true"/>
                <!-- Used to know which action group this is part of -->
                <field name="DiplomacyActionGroup" type="Text" not-null="true" hash="true"/>
                <!-- Used to know which action group subtype this is part of.  Defaults to normal since mainly for Espionage group. -->
                <field name="DiplomacyActionGroupSubtype" type="Text" value="DIPLOMACY_ACTION_GROUP_SUBTYPE_NORMAL" not-null="true" hash="true"/>
                <!-- The Player Operation that will start the project -->
                <field name="PlayerOperationType" type="Text" not-null="true" hash="true"/>
                <!-- If a target what type is it?  Trying to make it easier to have most things use the default Player Operation function. -->
                <field name="Target1Type" type="Text" not-null="false" hash="true"/>
                <!-- If a second target what type is it?  Trying to make it easier to have most things use the default Player Operation function. -->
                <field name="Target2Type" type="Text" not-null="false" hash="true"/>
                <!-- Maximum number of envoys that can be added.  If -1 then unlimited -->
                <field name="MaxNumEnvoys" type="Integer" value="-1" not-null="true"/>
                <!-- Maximum number of envoys that can be added.  If -1 then unlimited -->
                <field name="MinNumVirtEnvoys" type="Integer" value="-1" not-null="true"/>
                <!-- Maximum number of envoys that can be added.  If -1 then unlimited -->
                <field name="MaxNumVirtEnvoys" type="Integer" value="-1" not-null="true"/>
                <!-- Maximum number of envoys from other players that can be be used to support this.  If -1 then unlimited -->
                <field name="MaxNumSupportEnvoys" type="Integer" value="-1" not-null="true"/>
                <!-- Maximum number of envoys from other players that can be be used to oppose this.  If -1 then unlimited -->
                <field name="MaxNumOpposeEnvoys" type="Integer" value="-1" not-null="true"/>
                <!--  Description of the project before it starts.  -->
                <field name="Description" type="LocalizedText" not-null="true"/>
                <!--  Description of the project once it starts running.  Some values can change due to things like number of envoys used.  -->
                <field name="ActiveDescription" type="LocalizedText" not-null="false"/>
                <!-- Cost in gold to start the project. -->
                <field name="CostInGold" type="Integer" value="0" not-null="true"/>
                <!--  Description of cost.  -->
                <field name="CostDescription" type="LocalizedText" not-null="false"/>
                <!-- Size of support/oppose window.  -1 unlimited, 0 no window, positive number is number of turns open after start. -->
                <field name="SupportWindowSize" type="Integer" value="-1" not-null="true"/>
                <!-- Used to know if a project will be started by the Project UI.  Land Claim is the only one that currently won't.  Thought that if the active project won't show up either then we wouldn't even want to have an entry for it but again, Land Claim is the exception since we still need data so the action can run. -->
                <field name="UIStartProject" type="Bool" value="true" not-null="true"/>
                <!-- Used to know if a project should show as an active project.  Land Claim is the only one that currently won't. -->
                <field name="UIShowActiveProject" type="Bool" value="true" not-null="true"/>
                <!-- If the action gives/sabotages a yield what is it. -->
                <field name="UIOnly_GivesYieldType" type="Text" value="NO_YIELD" not-null="true"/>
                <!-- Base amount applied for total envoys. -->
                <field name="UIOnly_BaseAmount" type="Integer" value="0" not-null="true"/>
                <!-- Amount applied for having envoys in the action.  -->
                <field name="UIOnly_SupportAmount" type="Integer" value="0" not-null="true"/>
                <!-- Discription for action effect details from the Initial Player's perspective  -->
                <field name="DescriptionDetailsInitialPlayer" type="LocalizedText" not-null="false"/>
                <!-- Discription for action effect details from the Target Player's perspective  -->
                <field name="DescriptionDetailsTargetPlayer" type="LocalizedText" not-null="false"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="DiplomaticProjects_UI_DataRef" to="DiplomacyAction"/>
                <reference source="DiplomacyActionGroup" target="Type" to="Type"/>
                <reference source="DiplomacyActionGroupSubtype" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyPlayerRelationship" table-name="DiplomacyPlayerRelationships" cpp="true">
                <!-- The Diplomacy Relationship Type, like Friendly/Unfriendly -->
                <field name="DiplomacyPlayerRelationshipType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- The localization friendly name of this Type. -->
                <field name="Name" type="LocalizedText" not-null="true"/>
                <!-- // Min relationship score to be at this level. -->
                <field name="MinRelationship" type="Integer" value="-999" not-null="true"/>
                <field name="MaxRelationship" type="Integer" value="-999" not-null="true"/>
                <!--                <reference source="DiplomacyPlayerRelationshipType" target="Type" to="Type"/>  -->                <!--  Don't think we need but in case I get errors.  -->
        </definition>
        <definition name="DiplomacyFavorGrievanceEventGroup" table-name="DiplomacyFavorGrievanceEventGroups" cpp="true">
                <!-- The diplomatic action Group. -->
                <field name="DiplomacyFavorGrievanceEventGroupType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field, or at least some field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyFavorGrievanceEventGroupType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyFavorGrievanceEventData" table-name="DiplomacyFavorsGrievancesEventsData" cpp="true">
                <!-- The Diplomacy Favor Type -->
                <field name="DiplomacyFavorGrievanceEventType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- The localization friendly name of this favor. -->
                <field name="Name" type="LocalizedText" not-null="true"/>
                <!-- Amount of Favors give, not adjusted for precision.  0 means it will be supplied or calculated elsewhere -->
                <field name="Amount" type="Integer" value="0" not-null="true"/>
                <!-- Some events only matter within a certain Range.  -1 means it is not needed or will be supplied or calculated elsewhere -->
                <field name="Range" type="Integer" value="-1" not-null="true"/>
                <!-- Used to know which F, G or WE group this is part of -->
                <field name="DiplomacyFavorGrievanceEventGroup" type="Text" not-null="true" hash="true"/>
                <!-- Amount of influence to award when a grievance occurs -->
                <field name="InfAward" type="Integer" value="0" not-null="true"/>
                <!-- Amount of influence to award per population in a settlement when a settlement specific grievance occurs -->
                <field name="InfAwardPerPopulation" type="Integer" value="0" not-null="true"/>
                <!-- Whether or not to propagate this to teams or not -->
                <field name="TeamPropagation" type="Bool" value="true" not-null="true"/>
                <reference source="DiplomacyFavorGrievanceEventGroup" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyBonusEnvoyData" table-name="DiplomacyBonusEnvoyData" cpp="true">
                <!-- The Diplomatic Action/Project this is related to. -->
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true"/>
                <!-- NOTE:  If Hostile value is default/0 then it will use the Unfriendly value.  Same for Helpful and Friendly.  -->
                <!-- Number of bonus envoys for Initial player being Hostile to Target player  -->
                <field name="InitialHostile" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Unfriendly to Target player  -->
                <field name="InitialUnfriendly" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Friendly to Target player  -->
                <field name="InitialFriendly" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Hostile to Target player  -->
                <field name="InitialHelpful" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Hostile to Target player  -->
                <field name="TargetHostile" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Unfriendly to Target player  -->
                <field name="TargetUnfriendly" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Friendly to Target player  -->
                <field name="TargetFriendly" type="Integer" value="0" not-null="true"/>
                <!-- Number of bonus envoys for Initial player being Hostile to Target player  -->
                <field name="TargetHelpful" type="Integer" value="0" not-null="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="DiplomacyBonusEnvoyDataRef" to="DiplomacyAction"/>
        </definition>
        <definition name="DiplomaticActionInfluenceCosts" table-name="DiplomaticActionInfluenceCosts" cpp="true">
                <!-- The Diplomatic Action/Project this is related to. -->
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true"/>
                <!-- Influence Cost when Relationship is not a factor, like Influencing Independents.  -->
                <field name="InfCostNoRelationship" type="Integer" value="-1" not-null="true"/>
                <!-- Influence Cost with player we're Hostile to  -->
                <field name="InfCostHostile" type="Integer" value="-1" not-null="true"/>
                <!-- Influence Cost with player we're Unfriendly to  -->
                <field name="InfCostUnfriendly" type="Integer" value="-1" not-null="true"/>
                <!-- Influence Cost with player we're Unfriendly to  -->
                <field name="InfCostNeutral" type="Integer" value="-1" not-null="true"/>
                <!-- Influence Cost with player we're Friendly to  -->
                <field name="InfCostFriendly" type="Integer" value="-1" not-null="true"/>
                <!-- Influence Cost with player we're Helpful to  -->
                <field name="InfCostHelpful" type="Integer" value="-1" not-null="true"/>
                <!-- Influence Cost increase, flat value, for every additional Envoy purchased.  So for 2nd Envoy, this value.  For 3rd, this times 2.  0 will be ignored  -->
                <field name="InfCostSupportIncreaseFlat" type="Integer" value="0" not-null="true"/>
                <!-- Influence Cost increase, flat value, for every additional Envoy purchased.  So for 2nd Envoy, this value.  For 3rd, this value times 2.  0 will be ignored  -->
                <field name="InfCostSupportIncreasePercent" type="Integer" value="0" not-null="true"/>
                <!-- Influence Cost per turn.  Currently only used for Espionage actions.  -->
                <field name="InfCostPerTurn" type="Integer" value="0" not-null="true"/>
                <!-- Penalty Influence Cost per turn for when action is discovered.  Currently only used for Espionage actions.  -->
                <field name="PenaltyInfCostPerTurn" type="Integer" value="0" not-null="true"/>
                <!-- Penalty Influence Cost duration for when action is discovered.  Currently only used for Espionage actions.  -->
                <field name="PenaltyInfCostDuration" type="Integer" value="0" not-null="true"/>
                <!-- Used to identify a Diplomatic Action when updating a value in an age specific xml. -->
                <reference source="DiplomacyActionType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomaticResponse" table-name="DiplomaticResponses" cpp="true">
                <!-- The diplomatic action Response. -->
                <field name="DiplomaticResponseType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomaticResponseType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomaticFirstMeetResponse" table-name="DiplomaticFirstMeetResponses" cpp="true">
                <!-- The diplomatic First Meet Response. -->
                <field name="DiplomaticFirstMeetResponseType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <!-- The amount the relationship will change for this response -->
                <field name="Amount" type="Integer" value="0" not-null="true"/>
                <field name="InfCost" type="Integer" value="0" not-null="true"/>
                <field name="ShowCapitals" type="Bool" value="false" not-null="true"/>
                <field name="ShowCapitalRange" type="Integer" value="10" not-null="true"/>
                <field name="ShowCapitalRadius" type="Integer" value="1" not-null="true"/>
                <reference source="DiplomaticFirstMeetResponseType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomaticActionResponse" table-name="DiplomaticActionResponses" cpp="true">
                <!-- The Diplomatic Action/Project this is related to. -->
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true" hash ="true"/>
                <!-- The Response Type this information is for -->
                <field name="DiplomaticResponseType" type="Text" key="true" not-null="true" hash ="true"/>
                <!-- Influence Cost to be able to do this type of response  -->
                <field name="InfCost" type="Integer" value="0" not-null="true"/>
                <!-- Name of the type of Response. -->
                <field name="Name" type="LocalizedText" value="LOC_DIPLOMACY_ACTION_MISSING_NAME" not-null="true"/>
                <!-- Description of the Response and what the results of it will be.  Could be multiple sentences/lines.   -->
                <field name="Description" type="LocalizedText" value="LOC_DIPLOMACY_ACTION_MISSING_DATA" not-null="true"/>
                <!-- Description of the cost.  Currently will just be the cost.   -->
                <field name="CostDescription" type="LocalizedText" value="LOC_DIPLOMACY_ACTION_COST_YIELD_DIPLOMACY" not-null="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="ActionResponseRef" to="DiplomacyAction"/>
                <reference source="DiplomaticResponseType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyModifierTargetType" table-name="DiplomacyModifierTargetTypes" cpp="true">
                <!-- The diplomatic action Response. -->
                <field name="DiplomacyModifierTargetType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyModifierTargetType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomaticActionResponseModifier" table-name="DiplomaticActionResponseModifiers" cpp="true">
                <!-- The Diplomatic Action/Project this is related to. -->
                <field name="DiplomacyActionType" type="Text" key="true" not-null="true" hash ="true"/>
                <!-- The Response Type this information is for -->
                <field name="DiplomaticResponseType" type="Text" key="true" not-null="true" hash ="true"/>
                <!-- Modifier that should be started when this Response is used.  -->
                <field name="ModifierId" type="Text" key="true" not-null="true" hash="true"/>
                <!-- The Type of Modifier so we know how to start it.  For example a Diplomatic one versus Player based. -->
                <field name="ModifierType" type="Text" not-null="true" hash="true"/>
                <!-- The target for the modifier, like the initial or target player -->
                <field name="ModifierTarget" type="Text" not-null="true" hash="true"/>
                <reference source="DiplomacyActionType" target="DiplomacyActionType" targetRoleName="ActionResponseModifierRef" to="DiplomacyAction"/>
                <reference source="DiplomaticResponseType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyAgendaAmountType" table-name="DiplomacyAgendaAmountTypes" cpp="true">
                <!-- The Agenda Amount Type Enum. -->
                <field name="DiplomacyAgendaAmountType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- In case we need to have this display text at some point. -->
                <field name="Name" type="Text" not-null="true"/>
                <!-- Amount a relationship is changed. -->
                <field name="Amount" type="Integer" value="0" not-null="true"/>
                <reference source="DiplomacyAgendaAmountType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyAgendaAwardToType" table-name="DiplomacyAgendaAwardToTypes" cpp="true">
                <!-- The Agenda Award To Type Enum. -->
                <field name="DiplomacyAgendaAwardToType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- In case we need to have this display text at some point. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyAgendaAwardToType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyAgendaWeightingType" table-name="DiplomacyAgendaWeightingTypes" cpp="true">
                <!-- The Agenda Award To Type Enum. -->
                <field name="DiplomacyAgendaWeightingType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- In case we need to have this display text at some point. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyAgendaWeightingType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyBasicModifierValueType" table-name="DiplomacyBasicModifierValueTypes" cpp="true">
                <!-- The basic modifier value type. -->
                <field name="DiplomacyBasicModifierValueType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyBasicModifierValueType" target="Type" to="Type"/>
        </definition>
        <definition name="DiplomacyActionTag" table-name="DiplomacyActionTags" cpp="true">
                <!-- The basic modifier value type. -->
                <field name="DiplomacyActionTagType" type="Text" key="true" not-null="true" hash="true"/>
                <!-- GameCoreTypes wanted this to have a Name field. -->
                <field name="Name" type="Text" not-null="true"/>
                <reference source="DiplomacyActionTagType" target="Type" to="Type"/>
        </definition>
</definitions>
